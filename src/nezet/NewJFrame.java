package nezet;

import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modell.Konfiguracio;

public class NewJFrame extends javax.swing.JFrame {

    /* ADATTAGOK */
    private Konfiguracio modell;
    
    public NewJFrame() {
        initComponents();
        final String[] szakok = Konfiguracio.VALASZTHATO_SZAKOK;
//        /* hagyományos for: for tab */
//        for (int i = 0; i < szakok.length; i++) {
//            String szak = szakok[i];
//            cmbSzak.addItem(szak);
//        }
        
        /* továbbfejlesztett for: fore tab */
        for (String szak : szakok) {
            cmbSzak.addItem(szak);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chbHirlevel = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtNev = new javax.swing.JTextField();
        cmbSzak = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuKonfig = new javax.swing.JMenu();
        mnuKonfigBetoltes = new javax.swing.JMenuItem();
        mnuKonfigMentes = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuKonfigKilepes = new javax.swing.JMenuItem();
        mnuPrg = new javax.swing.JMenu();
        mnuPrgKiir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Aktuális konfiguráció"));

        chbHirlevel.setSelected(true);
        chbHirlevel.setText("hírlevél");

        jLabel2.setText("Szak");

        cmbSzak.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--== Kiválasztott szak ==--" }));

        jLabel1.setText("Név");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNev, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbSzak, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chbHirlevel))
                    .addComponent(btnReset, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSzak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbHirlevel))
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuKonfig.setText("Konfiguráció");

        mnuKonfigBetoltes.setText("Betöltés...");
        mnuKonfigBetoltes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKonfigBetoltesActionPerformed(evt);
            }
        });
        mnuKonfig.add(mnuKonfigBetoltes);

        mnuKonfigMentes.setText("Mentés...");
        mnuKonfigMentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKonfigMentesActionPerformed(evt);
            }
        });
        mnuKonfig.add(mnuKonfigMentes);
        mnuKonfig.add(jSeparator1);

        mnuKonfigKilepes.setText("Kilépés...");
        mnuKonfigKilepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKonfigKilepesActionPerformed(evt);
            }
        });
        mnuKonfig.add(mnuKonfigKilepes);

        jMenuBar1.add(mnuKonfig);

        mnuPrg.setText("Program");

        mnuPrgKiir.setText("modell kiírása");
        mnuPrgKiir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPrgKiirActionPerformed(evt);
            }
        });
        mnuPrg.add(mnuPrgKiir);

        jMenuBar1.add(mnuPrg);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuKonfigKilepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKonfigKilepesActionPerformed
        kilepes();
    }//GEN-LAST:event_mnuKonfigKilepesActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //System.out.println("kilépés folyamatban...");
        kilepes();
    }//GEN-LAST:event_formWindowClosing

    private void mnuKonfigMentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKonfigMentesActionPerformed
        //JFileChooser jfc = new JFileChooser();//Documents könnyvtár
        String hely = System.getProperty("user.dir");
        JFileChooser jfc = new JFileChooser(hely);//aktuális projekt könnyvtár
        
        /* jfc paraméterezése: */
        File kivalasztottFajl = new File(hely + "\\" + txtNev.getText() + ".txt");
        System.out.println("fajl = " + kivalasztottFajl);
        jfc.setSelectedFile(kivalasztottFajl);
        
        /* jfc megjelenítése, vizsgálata */
        int gomb = jfc.showSaveDialog(rootPane);//null | this <-- ez ua, mint rootPane
        
        if (gomb == JFileChooser.APPROVE_OPTION) {
            kivalasztottFajl = jfc.getSelectedFile();
            String fajlElerese = kivalasztottFajl.getAbsolutePath();
            Path path = Path.of(fajlElerese);//hova írjuk
            try {
                Files.writeString(path, tartalom());
            } catch (IOException ex) {
                /* felhasználónak: */
                String msg = "IO hiba!\n" + ex.getMessage();
                JOptionPane.showMessageDialog(rootPane, msg);
                /* fejlesztőnek: */
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        /* a mentés alapszerkezete: */
//        Path path = Path.of("kimenet.txt");//hova írjuk
//        byte[] bytes = jTextField1.getText().getBytes();//mit írunk
//        try {
//            //Files.write(path, bytes);
//            Files.writeString(path, jTextField1.getText());
//        } catch (IOException ex) {// generált kód!!!
//            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_mnuKonfigMentesActionPerformed

    private void mnuKonfigBetoltesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKonfigBetoltesActionPerformed
        /* a beolvasás alapszerkezete: */
        JFileChooser jfc = new JFileChooser(System.getProperty("user.dir"));//aktuális projekt könnyvtár
        int gomb = jfc.showSaveDialog(rootPane);//null | this <-- ez ua, mint rootPane
        if (gomb == JFileChooser.APPROVE_OPTION) {
            File kivalasztottFajl = jfc.getSelectedFile();
            try {
                String egySor = Files.readString(kivalasztottFajl.toPath());
                System.out.println("A beolvasott fájl tartalma: ");
                System.out.println(egySor);
                
                /* modell létrehozása */
                //Konfiguracio modell = new Konfiguracio(nev, index, chb);
                modell = new Konfiguracio(egySor);
                
                /* modell felhasználása: 
                a nézet setterei paraméterként megkapják a modell gettereit
                */
                txtNev.setText(modell.getNev());
                cmbSzak.setSelectedIndex(modell.getIndex());
                chbHirlevel.setSelected(modell.isHirlevel());
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mnuKonfigBetoltesActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtNev.setText("");
        cmbSzak.setSelectedIndex(0);
        chbHirlevel.setSelected(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void mnuPrgKiirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPrgKiirActionPerformed
        int index = modell.getIndex();
        String szak = Konfiguracio.VALASZTHATO_SZAKOK[index-1];//cmb tartalmaz már 1 indexet, a 0. indexet
        String msg = "név: " + modell.getNev()
                +"\nszak: %s(%d)".formatted(szak, index)
                +"\nhírlevél: " + (modell.isHirlevel()?"kér":"nem kér");
        
        try {
            Files.writeString(Path.of("beszedesModell.txt"), msg);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuPrgKiirActionPerformed

    private String tartalom(){
        String nev = txtNev.getText();
        int index = cmbSzak.getSelectedIndex();
        boolean hirlevel = chbHirlevel.isSelected();
        final String SEP = " ";
        
        return nev+SEP+index+SEP+hirlevel;
    }
    
    private void kilepes() throws HeadlessException {
        String msg = "Biztos kilépsz?";
        String cim = "KILÉPÉS";
        int msgTip = JOptionPane.QUESTION_MESSAGE;
        int optTip = JOptionPane.YES_NO_OPTION;//.OK_CANCEL_OPTION;
        //JOptionPane.showMessageDialog(this, msg, cim, msgTip);
        int gomb = JOptionPane.showConfirmDialog(rootPane, msg, cim, optTip);
        if (gomb == JOptionPane.YES_OPTION) {
            int hibaKod = 0;
            System.exit(hibaKod);
        }
        
        //System.out.println("gomb = " + gomb);//YES: 0, NO: 1 , X: -1
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox chbHirlevel;
    private javax.swing.JComboBox<String> cmbSzak;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu mnuKonfig;
    private javax.swing.JMenuItem mnuKonfigBetoltes;
    private javax.swing.JMenuItem mnuKonfigKilepes;
    private javax.swing.JMenuItem mnuKonfigMentes;
    private javax.swing.JMenu mnuPrg;
    private javax.swing.JMenuItem mnuPrgKiir;
    private javax.swing.JTextField txtNev;
    // End of variables declaration//GEN-END:variables
}
